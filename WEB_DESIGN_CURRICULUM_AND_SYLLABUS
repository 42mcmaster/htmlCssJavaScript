This is a comprehensive curriculum spanning 18 weeks (two nine-week quarters), designed to meet the requirements of the **145010 Web Design** course, culminating in the major `capstoneProject.md` and preparing students for the state web exam.

The curriculum is structured into 8 thematic modules that cover the core technologies (HTML, CSS, JavaScript, Bootstrap) and essential professional and technical skills (SEO, Hosting, Project Management, Testing, and Troubleshooting) outlined in Strands 1, 2, and 6 of the course description.

---

## 145010 Web Design Curriculum Syllabus Outline

**Course Description:** Students will learn the dynamics of the Web environment while pursuing an in-depth study of both Hypertext Markup Language (HTML) and Cascading Style Sheets (CSS). Web based protocols such as FTP, TCP/IP, and HTTP will be addressed. Students will create a website with tag text elements, special characters, lines, graphics, hypertext links, and graphical tables.

**Culmination:** Capstone Project (Weeks 16-18) and State Web Exam.

---

## Quarter 1: Web Foundations, Structure, and Styling (Weeks 1-9)

The first quarter focuses on the core building blocks of the web—HTML and CSS—and introduces essential IT concepts.

| Week(s) | Module/Theme | Lessons Included | Primary Alignment (Strand, Outcome, Competency) |
| :---: | :--- | :--- | :--- |
| **1** | **Introduction & CS Fundamentals** | `csFundamentalsLesson.md`, `js00Part1.md`, `js00Part2.md` | **IT Fundamentals (Strand 2):** General introduction to IT systems, processors, and logic. **1.4.6:** Use an electronic database to access and create business/technical information (data processing context). |
| **2** | **HTML Core Structure (6.1)** | `html01.md`, `html02.md`, `html03.md` | **Web Development (Strand 6): 6.1.1:** Describe basic principles of HTML. **6.1.3:** Format content using HTML formatting tags (hyperlink, graphic attributes). **6.2.1, 6.2.2, 6.2.3:** Create absolute/relative links, anchors, and email/download links. |
| **3** | **HTML Data & Forms (6.1, 6.4)** | `html04.md`, `html05.md` | **6.1.6:** Create and format a table in a web page. **6.4.2, 6.4.3:** Write HTML code to add a form, text entry fields, radio buttons, etc.. **6.5.9:** Incorporate forms on a website. |
| **4** | **CSS Basics & Selectors (6.1)** | `css01.md`, `css02.md` | **6.1.7:** Integrate styles (e.g., inline or external CSS). **6.5.7:** Create and attach Cascading Style Sheets (CSS). **1.4.7:** Use productivity applications to optimize assigned tasks (managing style sheets). |
| **5** | **CSS Layout & The Box Model** | `css03.md`, `css04.md` | **6.5.8:** Format website layout (text formatting, background color). **2.11.1:** Identify the problem (debugging layout issues). |
| **6** | **Multimedia & Links (6.2, 6.5)** | `multimedia01.md`, `seo01.md` | **6.2.4:** Insert image and wrap text around it using CSS. **6.2.6:** Insert media files (audio, video) using HTML tags. **6.5.14:** Incorporate Search Engine Optimization (SEO) into webpages. **1.7.13:** Protect intellectual property and knowledge (copyright/licensing for media). |
| **7** | **JavaScript Core** | `js01.md`, `js02.md`, `js03.md` | **6.3.1, 6.3.2:** Select and apply scripting languages used in web development; Insert client-side script into a web page. **1.4.4:** Use system hardware to support software applications (running client-side code). |
| **8** | **JS DOM Manipulation & Events** | `js04.md`, `js05.md` | **6.3.1:** Select and apply scripting languages. **6.2.7:** Build a hover or mouseover effect to change the style of a link (using events). **1.2.5:** Communicate information (workplace expectations) (debugging/output via console/alerts). |
| **9** | **JS Conditionals & Logic** | `js06.md`, `js07.md` | **6.4.7:** Code scripting to interact with data sources (logic for forms). **6.1.4:** Use writing process techniques (revising, editing, proofreading) to check the web page for format and text accuracy. |

---

## Quarter 2: Responsive Design, Professional Skills, and Capstone (Weeks 10-18)

The second quarter focuses on implementing responsive design using Bootstrap, coupling JavaScript validation with modern forms, developing professional project management skills, and culminating in the Capstone Project and final state exam.

| Week(s) | Module/Theme | Lessons Included | Primary Alignment (Strand, Outcome, Competency) |
| :---: | :--- | :--- | :--- |
| **10** | **Bootstrap Components & Grid** | `bootstrap01.md`, `bootstrap02.md` | **Web Development (Strand 6): 6.5.13:** Integrate responsive design into web development. **2.7.2:** Describe ways to present data (responsive web design). **6.1.7:** Integrate external Cascading Style Sheets (CSS). |
| **11** | **Bootstrap Layout & Forms** | `bootstrap03.md`, `bootstrap04.md` | **6.5.2:** Plan a website's structure for navigation and usability. **6.4.6:** Format a completed form using HTML and CSS. **2.7.4:** Identify how the use of different browsers and devices effects the function of a webpage (mobile vs. desktop). |
| **12** | **Project Planning & Scope** | `proWebDevProjectPlanning.md` | **IT Fundamentals (Strand 2): 2.9.2, 2.9.3, 2.9.5:** Determine the scope and purpose of the project; determine target audience, client needs, objectives; develop a timeline, communication plan, task breakdown, costs, deliverables, and responsibilities. **Business Operations (Strand 1): 1.2.13:** Identify stakeholders and solicit their opinions. **1.6.11, 1.9.1:** Describe how all business activities work within parameters of a budget; create, analyze, and interpret financial documents (budgets). |
| **13** | **Deployment & Protocols** | `hosting01.md`, `testing01.md` | **6.5.12:** Publish the completed website to a web server. **6.5.11:** Code a website for cross-platform and cross-browser compatibility and validation. **2.7.4:** Identify how the use of different browsers and devices effects the function of a webpage. |
| **14** | **Professional Testing & QA** | `proWebDevTesting.md` | **2.12.1, 2.12.3:** Create a written procedure agreed by the stakeholders for determining acceptability; Develop test cases that are realistic and include targeted platforms and device types. **6.5.10:** Develop and execute usability tests on a completed website. **1.2.12:** Use technical writing skills to complete forms and create reports (test reports). |
| **15** | **Troubleshooting & Handoff** | `proWebDevTroubleShooting.md` | **2.11.2, 2.11.5, 2.11.7, 2.11.8:** Select troubleshooting methodology (top down, bottom up); Design, implement, and document a solution. **2.13.4, 2.13.6:** Identify support staff, training needs, and contingency plans in the rollout plan; Deliver support and training materials. **1.1.7:** Apply problem-solving and critical-thinking skills to work-related issues. |
| **16** | **Capstone Project: Structure & Layout** | `capstoneProject.md` (Week 8 Planning, Week 9 Styling) | Integration of all concepts learned in Q1/Q2. Specifically focusing on **HTML5 semantic structure** and **Bootstrap responsive design** (6.1, 6.5.13). |
| **17** | **Capstone Project: Interactivity & Media** | `capstoneProject.md` (Week 9 Custom Styling, JS) | Focus on **JavaScript form validation** (6.3, 6.4) and **Multimedia integration** (6.2, 6.5.9). Includes implementing hover effects (6.2.7). |
| **18** | **Capstone Project: Launch & Exam Prep** | `capstoneProject.md` (Week 10 Polish & Launch) | Focus on **SEO** (6.5.14), **Publishing/Deployment** (6.5.12), **Cross-Browser Testing** (6.5.11), and **Documentation**. This leads directly into the final State Web Exam on the material. |

---

## Alignment with 145010 Strands and Outcomes

The curriculum systematically addresses all required technical content, focusing heavily on Strand 6 and integrating professional skills (Strand 1 and 2) through project-based learning.

### Strand 6: Web Development

This strand is addressed throughout Quarters 1 and 2, forming the technical core of the course:

| Outcome | Description | Alignment in Lessons |
| :--- | :--- | :--- |
| **6.1. Web Pages** | Create basic web pages. | `html01-05` (structure, lists, tables, links, forms). |
| **6.1.7** | Integrate styles (e.g., inline or external CSS). | `css01-04`, `bootstrap01` (using CSS frameworks and custom CSS). |
| **6.1.4** | Use writing process techniques (drafting, revising, editing, proofreading) to check the web page for format and text accuracy. | Embedded in `html01-05`, enforced in `capstoneProject.md`. |
| **6.2. Links and Multimedia** | Add links and insert multimedia files. | `html03` (links), `multimedia01` (images, video, audio). |
| **6.2.7** | Build a hover or mouseover effect to change the style of a link. | Covered in `js05` (Events) and `capstoneProject.md` requirements. |
| **6.3. Scripting** | Integrate scripting into a web page. | `js01-06` (JS Core, DOM, Events). |
| **6.4. Web Forms** | Integrate forms into a web page. | `html05` (HTML Forms), `js07` (JS Validation), `bootstrap04` (Styled Forms). |
| **6.5. Websites** | Create and update a website. | Addressed comprehensively via: `bootstrap02` (grid/layout), `hosting01` (publishing/6.5.12), `testing01` (cross-browser/6.5.11), `seo01` (6.5.14), and the final `capstoneProject.md`. |
| **6.5.13** | Integrate responsive design into web development. | `bootstrap02` and `capstoneProject.md` (critical requirement). |

### Strand 2: IT Fundamentals (Planning, Troubleshooting, Acceptance)

This strand is covered primarily in Quarters 1 and 2, specifically Weeks 1, 12, 14, and 15, focusing on professional processes required for real-world projects:

| Outcome | Competencies Covered | Alignment in Lessons |
| :--- | :--- | :--- |
| **2.7. Applications and Architecture** | 2.7.2 (Responsive web design), 2.7.4 (Browser effects on function), 2.7.8 (Static/dynamic sites). | `bootstrap02`, `testing01`. |
| **2.9. Project Concept Proposal** | 2.9.2 (Determine project scope), 2.9.3 (Determine audience, objectives, budget), 2.9.5 (Develop timeline, task breakdown). | `proWebDevProjectPlanning.md`. |
| **2.11. Troubleshooting** | 2.11.1-2.11.8 (Identify problem, select methodology, analyze data, design/test/implement/document solution). | `proWebDevTroubleShooting.md`. |
| **2.12. Performance Tests and Acceptance** | 2.12.1 (Create written procedure/acceptance plan), 2.12.3 (Develop realistic test cases), 2.12.4 (Document usability/testing integration). | `proWebDevTesting.md` (Test Cases, UAT, Acceptance Criteria). |
| **2.13. Rollout and Handoff** | 2.13.1 (Project goals/timelines), 2.13.2 (Communicate rollout plans), 2.13.6 (Deliver support/training materials). | `proWebDevTesting.md` (Post-acceptance activities) and `proWebDevTroubleShooting.md` (Documentation). |

### Strand 1: Business Operations/21st Century Skills

This strand is integrated throughout the course, particularly within the advanced professional modules (Weeks 12-15) and the development of the final Capstone Project.

| Outcome | Competencies Covered (Examples) | Alignment in Lessons |
| :--- | :--- | :--- |
| **1.1. Employability Skills** | 1.1.5 (Portfolio development/resumé writing/interviewing skills). | The `capstoneProject.md` emphasizes making the project portfolio-worthy. |
| **1.2. Leadership and Communications** | 1.2.1 (Cite sources), 1.2.5 (Communicate information for intended audience), 1.2.11, 1.2.12 (Write professional correspondence, technical reports). | `proWebDevProjectPlanning.md` (Communication plans/Proposals). `proWebDevTesting.md` (Test documentation/reports). |
| **1.3. Business Ethics and Law** | 1.3.7 (Labor laws, Americans with Disabilities Act), 1.3.8 (Verify compliance with computer and intellectual property laws). | `multimedia01` (image/media licensing/IP context). `seo01` (avoiding black hat techniques). **6.1.2:** Plan considering ADA requirements. |
| **1.6. Business Literacy** | 1.6.11 (Work within parameters of a budget). | `proWebDevProjectPlanning.md` (Budget Planning). |
| **1.7. Entrepreneurship** | 1.7.13 (Protect intellectual property and knowledge: copyright, patent, trademark). | `multimedia01` and ethical discussions related to design and content creation. |